jobs:
- job: Linux
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - script: 'git submodule update --init'
    displayName: Update submodule
  - task: Docker@1
    displayName: 'Deploy postgres database'
    inputs:
      command: 'run'
      containerName: Postgresql
      ports: 5432:5432
      restartPolicy: onFailure
      runInBackground: true
      imageName: postgres:10.5-alpine
      envVars: |
        POSTGRES_DB=$(db_name)
        POSTGRES_USER=$(db_user)
        POSTGRES_PASSWORD=$(db_pass_secret)
  - template: azure-gradle.yml
    parameters:
      wrapper: gradlew
      tasks: flywayClean flywayMigrate
      displayName: Flyway migrations
      publishTestResults: false
  - template: azure-gradle.yml
    parameters:
      wrapper: gradlew
      tasks: test distZip
      displayName: Gradle test and dist
  - task: CopyFiles@2
    inputs:
      sourceFolder: build/distributions/
      contents: '*.zip'
      targetFolder: $(Build.ArtifactStagingDirectory)/dist
      cleanTargetFolder: true
      overWrite: true
  - task: PublishBuildArtifacts@1
    inputs:
      pathtoPublish: '$(Build.ArtifactStagingDirectory)/dist'
      artifactName: 'dist'
      publishLocation: 'Container'
- job: Windows
  pool:
    vmImage: 'VS2017-Win2016'
  steps:
  - script: 'git submodule update --init'
    displayName: Update submodule
  - template: azure-postgres-win.yml
  - template: azure-gradle.yml
    parameters:
      wrapper: gradlew.bat
      tasks: flywayClean flywayMigrate
      publishTestResults: false
      displayName: Flyway migrations
  - template: azure-gradle.yml
    parameters:
      wrapper: gradlew.bat
      displayName: Gradle test
