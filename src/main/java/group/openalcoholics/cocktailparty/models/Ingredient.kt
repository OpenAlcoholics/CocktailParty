/**
* API
* No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
*
* OpenAPI spec version: 0.1.0
*
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package group.openalcoholics.cocktailparty.models

import com.fasterxml.jackson.annotation.JsonIgnore
import group.openalcoholics.cocktailparty.db.dao.IngredientCategoryDao
import group.openalcoholics.cocktailparty.models.IngredientCategory
import org.jdbi.v3.core.mapper.Nested

/**
 * A liquid ingredient of a cocktail.
 * @param id The ingredient ID
 * @param name The name of the ingredient
 * @param share The share in a cocktail of the ingredient in percent
 * @param imageLink A link to an image of the ingredient
 * @param alcoholPercentage The percentage of alcohol content in the ingredient
 * @param category
 * @param notes Arbitrary notes on the ingredient
 */
data class Ingredient (
    /* The ingredient ID */
    val id: kotlin.Int,
    /* The name of the ingredient */
    val name: kotlin.String,
    /* The percentage of alcohol content in the ingredient */
    val alcoholPercentage: kotlin.Int,
    @Nested("${IngredientCategoryDao.TABLE_NAME}.")
    val category: IngredientCategory,
    /* The share in a cocktail of the ingredient in percent */
    val share: kotlin.Int? = null,
    /* A link to an image of the ingredient */
    val imageLink: kotlin.String? = null,
    /* Arbitrary notes on the ingredient */
    val notes: kotlin.String? = null,
    @JsonIgnore
    val rank: Int? = null
): BaseModel<Ingredient> {
    override fun withId(id: Int): Ingredient {
        return copy(id = id)
    }

    override fun equals(other: Any?): Boolean {
        if (this === other) return true
        if (javaClass != other?.javaClass) return false

        other as Ingredient

        if (id != other.id) return false
        if (name != other.name) return false
        if (alcoholPercentage != other.alcoholPercentage) return false
        if (category != other.category) return false
        if (share != other.share) return false
        if (imageLink != other.imageLink) return false
        if (notes != other.notes) return false

        return true
    }

    override fun hashCode(): Int {
        var result = id
        result = 31 * result + name.hashCode()
        result = 31 * result + alcoholPercentage
        result = 31 * result + category.hashCode()
        result = 31 * result + (share ?: 0)
        result = 31 * result + (imageLink?.hashCode() ?: 0)
        result = 31 * result + (notes?.hashCode() ?: 0)
        return result
    }


/*    override fun toString(): String {
        return "Ingredient(id=$id, name='$name')"
    }*/
}

